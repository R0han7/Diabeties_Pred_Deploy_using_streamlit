# -*- coding: utf-8 -*-
"""Diabeties_Pred.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ClVBQDESH48A3NezOn5TjdmpSnbkeWDS
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn import svm
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

data=pd.read_csv('/content/diabetes.csv')
data

data.describe()
data['Outcome'].value_counts()
data.groupby('Outcome').mean()
X=data.drop(columns='Outcome',axis=1)

data['Outcome'].value_counts()

scaler=StandardScaler()
scaler.fit(X)

std_data=scaler.transform(X)

X=std_data
y=data['Outcome']

X_train,X_test,y_train,y_test=train_test_split(X,y,random_state=42,stratify=y)

model=LogisticRegression()
model.fit(X_train,y_train)

pred=model.predict(X_test)
accuracy_score(pred,y_test)

"""# Deploying Model

"""

import pickle
filename='trained.sav'
pickle.dump(model,open(filename,'wb'))

loaded_model=pickle.load(open(filename,'rb'))

input=(1,	85,	66,	29,	0	,26.6,	0.351	,55	)
input_data=np.array(input).reshape(1,-1)
pred=loaded_model.predict(input_data)
if pred[0]==0:
  print("not diabetic")
else:
  print('diabetic')